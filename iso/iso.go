package iso

<<<<<<< HEAD
import (
	"fmt"
)
=======
import "fmt"
>>>>>>> TorsTest

const ASCII = "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F" +
	"\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F" +
	"\xA0\xA1\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\xAA\xAB\xAC\xAD\xAE\xAF" +
	"\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xBB\xBC\xBD\xBE\xBF" +
	"\xC0\xC1\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF" +
	"\xD0\xD1\xD2\xD3\xD4\xD5\xD6\xD7\xD8\xD9\xDA\xDB\xDC\xDD\xDE\xDF" +
	"\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF" +
	"\xF0\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA\xFB\xFC\xFD\xFE\xFF"

func IterateOverASCIIStringLiteral() {
	for i := 0; i < len(ASCII); i++ {
		fmt.Printf("%X %q %b\n", ASCII[i], ASCII[i], ASCII[i])
	}
}

// Kode for Oppgave 2b
func GreetingExtendedASCII() string {
<<<<<<< HEAD
	var extascii []byte
=======
	//var buffer bytes.Buffer
>>>>>>> TorsTest
	a := "\x22\x53\x61\x6C\x75\x74\x2C\x20\xE7\x61\x20\x76\x61\x20\xB0\x2D\x29\x20\x80\x35\x30\x22"
	for i := 0; i < len(a); i++ {
		fmt.Println(extascii)
		fmt.Printf("%c", a[i])

	}
	return a
}

func GreetingExtendedASCII2() string {
	var extASCII []byte
	for i := 0x80; i <= 0xFF; i++ {
		extASCII = append(extASCII, byte(i))
	}
	//sfmt.Println(string(extASCII))
	//fmt.Printf("%c", string(extASCII))
	fmt.Printf("\n%c", extASCII)

	greeting := "\x22\x53\x61\x6C\x75\x74\x2C\x20\xE7\x61\x20\x76\x61\x20\xB0\x2D\x29\x20\x80\x35\x30\x22"

	return greeting
}
